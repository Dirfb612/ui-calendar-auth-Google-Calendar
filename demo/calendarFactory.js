(function () {
   'use strict';

   angular
      .module('calendarDemoApp')
      .factory('calendarFactory', calendarFactory);

   calendarFactory.$inject = ['uiCalendarConfig'];

   function calendarFactory(uiCalendarConfig) {

      //Global variables to access the calendar
      var requestList,
         calendarId = 'qv8rv593gn5g8pumu0bid6bco0@group.calendar.google.com',
         eventsList = [],
         url,
         request;
      self.events = [];

      return {

         loadCalendarApi: loadCalendarApi,
         makeApiCall: makeApiCall,
         makeRpcRequest: makeRpcRequest,
         eventClick: eventClick,
         loading: loading,
         alertOnResize: alertOnResize,
         addRemoveEventSource: addRemoveEventSource,
         remove: remove,
         getColors: loadCalendarColors

      };


      self.alertOnResize = alertOnResize;
      self.addRemoveEventSource = addRemoveEventSource;
      self.loading = loading;
      self.eventClick = eventClick;

      function loadCalendarApi() {
         gapi.client.load('calendar', 'v3', makeApiCall);
      }

      function loadCalendarColors() {
         gapi.client.load('calendar', 'v3', getColors);
      }

      function makeApiCall() {
         //insert into calendar

         requestList = gapi.client.calendar.events.list({
            'calendarId': calendarId
         });

         console.log('--- eventsList ---');
         console.log(eventsList);
         uiCalendarConfig.calendars['myCalendar'].fullCalendar('removeEventSource', eventsList);

         eventsList = [];
         // Step 6: Execute the API request
         requestList
            .then(function (resp) {

               if (resp.result.error) {

                  reportError('Google Calendar API: ' + data.error.message, data.error.errors);

               } else if (resp.result.items) {

                  console.log('--- resp.result.items what?? ---');
                  console.log(resp.result);


                  resp.result.items.forEach(function (entry, index) {
                     var color;

                     if(entry.colorId == 9){
                        color = "#5484ED";
                     }else if(entry.colorId == 10){
                        color = "#51B749";
                     }

                     eventsList.push({
                        color: color,
                        id: entry.id,
                        title: entry.summary,
                        start: entry.start.dateTime || entry.start.date, // try timed. will fall back to all-day
                        end: entry.end.dateTime || entry.end.date, // same
                        url: url,
                        location: entry.location,
                        description: entry.description
                     });
                  });

               }
               console.log('--- eventsList ---');
               console.log(eventsList);

               if (eventsList.length > 0) {
                  uiCalendarConfig.calendars['myCalendar'].fullCalendar('addEventSource', eventsList, true);
                 // getEventList(eventsList);
                 // loadCalendarColors();
               }

            }, function (reason) {
               console.log('Error: ' + reason.result.error.message);
            });
      }

      function makeRpcRequest(eventData) {

         gapi
            .client
            .load('calendar', 'v3')
            .then(function () {
               request = gapi.client.calendar.events.insert({
                  'calendarId': calendarId,
                  'resource': eventData
               });

               request.then(function (resp) {

                  if (resp.result.error) {
                     reportError('Google Calendar API: ' + data.error.message, data.error.errors);
                  } else {

                     //makeApiCall();
                     console.log(resp);
                     var creator = resp.result.creator.email;
                     var calendarEntry = resp.result.htmlLink;

                     console.log('--- Calendar entry successfully created by---');
                     console.log(creator);
                     console.log('--- dd ---');
                     console.log(calendarEntry);
                  }
               }, function (reason) {
                  console.log('Error: ' + reason.result.error.message);

               });
            });
      }

      //Event Click
      function eventClick(event) {
         // opens events in a popup window
         window.open(event.url, 'gcalevent', 'width=700,height=600');
         return false;
      }

      function loading(bool) {
         $('#loading').toggle(bool);
      }

      // Event eventResize
      //with this you can handle the events that generated by resizing any event to different position in the calendar
      function alertOnResize(event, delta, revertFunc, jsEvent, ui, view) {
         self.alertMessage = ('Inicio evento ' + event.start.format()
         + ' Evento extendido:' + event.end.format());
         if (!confirm("Es correcto?")) {
            revertFunc();
         }
      }

      // add and removes an event source of choice
      function addRemoveEventSource(sources, source) {
         var canAdd = 0;
         angular.forEach(sources, function (value, key) {
            if (sources[key] === source) {
               sources.splice(key, 1);
               canAdd = 1;
            }
         });
         if (canAdd === 0) {
            sources.push(source);
         }
      }

      //Render Tooltip
      /*      self.eventRender = eventRender;
       function eventRender(event, element, view) {
       element.attr({
       'tooltip': event.title,
       'tooltip-append-to-body': true
       });
       $compile(element)($scope);
       }*/

      // remove event
      self.remove = remove;
      function remove(index) {
         self.events.splice(index, 1);

      }

      function getColors() {

         gapi
            .client
            .load('calendar', 'v3')
            .then(function () {
               request = gapi.client.calendar.colors.get({
                  'calendarId': calendarId

               });

               request
                  .then(function (resp) {

                     if (resp.result.error) {
                        reportError('Google Calendar Colors: ' + data.error.message, data.error.errors);

                     } else if (resp.result) {

                        Object.keys(resp.result.calendar).forEach(function (key, index) {

                          // eventsList[index]['color'] = resp.result.calendar[key].background;


                           /*eventsColors.push({
                              color: resp.result.calendar[key].background
                           });*/

                        });
                        console.log('--- eventsList colors ---');
                        console.log(eventsList);

                        uiCalendarConfig.calendars['myCalendar'].fullCalendar('addEventSource', eventsList, true);

                     }
                  }, function (reason) {
                     console.log('Error: ' + reason.result.error.message);

                  });
            });
      }

   }

}());


